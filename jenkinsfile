def remote = [:]
remote.name = 'vps'
remote.host = '185.97.144.204'
remote.allowAnyHosts = true

pipeline {
    agent any
    parameters {
        string(name: 'REPO_URL', defaultValue: 'https://github.com/saber0amine/SpoceOveD.git', description: 'Git repository URL')
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build')
    }

    environment {
        VAULT_ADDR = 'http://185.97.144.204:8200'
        VAULT_SCRIPT_PATH = '/home/secret_manager/hashiCorp_vault/vault_setup.sh'
    }

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                git branch: params.BRANCH, url: params.REPO_URL
            }
        }

        stage('Connect to my server') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'SSH_CRED', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        remote.user = USERNAME
                        remote.password = PASSWORD
                    }
                    sshCommand remote: remote, command: 'ls -la'
                }
            }
        }

        // Uncomment and complete the following stages as needed
        // stage('Setup Vault') {
        //     steps {
        //         script {
        //             sshagent(['your-ssh-credentials-id']) {
        //                 sh """
        //                     ssh user@185.97.144.204 '
        //                         chmod +x ${VAULT_SCRIPT_PATH}
        //                         ${VAULT_SCRIPT_PATH}
        //                     '
        //                 """
        //             }
        //             env.VAULT_TOKEN = sh(
        //                 script: "ssh user@185.97.144.204 'grep \"Initial Root Token:\" /home/secret_manager/hashiCorp_vault/init.txt | awk \'{print \$NF}\'\'",
        //                 returnStdout: true
        //             ).trim()
        //         }
        //     }
        // }

        // stage('Build Applications') {
        //     steps {
        //         dir('customer-app') {
        //             sh 'mvn clean package'
        //         }
        //         dir('inventory-service') {
        //             sh 'mvn clean package'
        //         }
        //     }
        // }

        // stage('Deploy Applications') {
        //     steps {
        //         script {
        //             sh """
        //                 VAULT_TOKEN=${env.VAULT_TOKEN} VAULT_ADDR=${VAULT_ADDR} \
        //                 java -jar customer-app/target/customer-app.jar &
        //             """
        //             sh """
        //                 VAULT_TOKEN=${env.VAULT_TOKEN} VAULT_ADDR=${VAULT_ADDR} \
        //                 java -jar inventory-service/target/inventory-service.jar &
        //             """
        //         }
        //     }
        // }
    }

    post {
        always {
            sleep 5
        }
    }
}